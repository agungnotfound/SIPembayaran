package sipembayaran.View;

import com.mysql.jdbc.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import sipembayaran.Controller.DetailPenjualanJpaController;
import sipembayaran.Controller.PenjualanJpaController;
import sipembayaran.Model.DetailPenjualan;
import sipembayaran.Model.Penjualan;
import static sipembayaran.SIPembayaran.EMF;

/**
 *
 * @author agungnotfound
 */
public class FrmDataPembayaran extends javax.swing.JInternalFrame {

//    FrmPembayaran frmPembayaran;

    PenjualanJpaController pjlCtrl = new PenjualanJpaController(EMF);
    DetailPenjualanJpaController dpjlCtrl = new DetailPenjualanJpaController(EMF);
    Penjualan pjl;
    DetailPenjualan dpjl;
    

    public Connection conn;
    public ResultSet rs;
    public PreparedStatement ps;

    /**
     * Creates new form FrmDataPembayaran
     */
    public FrmDataPembayaran() {
        initComponents();
        tanggal();
        refreshTable();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        SIPembayaranPUEntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("SIPembayaranPU").createEntityManager();
        penjualanQuery = java.beans.Beans.isDesignTime() ? null : SIPembayaranPUEntityManager.createQuery("SELECT p FROM Penjualan p");
        penjualanList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(penjualanQuery.getResultList());
        btnEdit = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblBayar = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        setClosable(true);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, penjualanList, tblBayar);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idPenjualan}"));
        columnBinding.setColumnName("No. Transaksi");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${tanggal}"));
        columnBinding.setColumnName("Tanggal");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nama}"));
        columnBinding.setColumnName("Nama");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${noMeja}"));
        columnBinding.setColumnName("No Meja");
        columnBinding.setColumnClass(Integer.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        tblBayar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBayarMouseClicked(evt);
            }
        });
        tblBayar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblBayarKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tblBayar);

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jLabel1.setText("DATA PENJUALAN");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 498, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(177, 177, 177)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblBayarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblBayarKeyReleased
        //        tableFilter(txtFilter.getText());
    }//GEN-LAST:event_tblBayarKeyReleased

    private void tblBayarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBayarMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount()==2){
            btnEditActionPerformed(null);
        }

    }//GEN-LAST:event_tblBayarMouseClicked

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        int row = tblBayar.getSelectedRow();
        if (row == -1) { //jika row tidak dipilih
            JOptionPane.showMessageDialog(null, "Pilih Data!");
            return;
        }

        String nomor = tblBayar.getValueAt(row, 0).toString();

        pjl = pjlCtrl.findPenjualan(nomor);
        if (pjl != null) {
            FrmPembayaran bayar = new FrmPembayaran(pjl, dpjl, this);
            this.getParent().add(bayar);
            bayar.setVisible(true);
        }

    }//GEN-LAST:event_btnEditActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.persistence.EntityManager SIPembayaranPUEntityManager;
    private javax.swing.JButton btnEdit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private java.util.List<sipembayaran.Model.Penjualan> penjualanList;
    private javax.persistence.Query penjualanQuery;
    private javax.swing.JTable tblBayar;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    public void refreshTable() {
        penjualanList.clear();
        tblBayar.updateUI();

        MyTableModel model = new MyTableModel();
        model.addColumn("No. Transaksi");
        model.addColumn("Nama");
        model.addColumn("Tanggal");
        model.addColumn("No Meja");

        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");

        Object[] objs = new Object[4];
        for (Penjualan penjualan : pjlCtrl.findPenjualanEntities()) {
            objs[0] = penjualan.getIdPenjualan();
            objs[1] = penjualan.getNama();
            objs[2] = sdf.format(penjualan.getTanggal());
            objs[3] = penjualan.getNoMeja();

            model.addRow(objs);
        }

        tblBayar.setModel(model);
//        YAController.resizeColumnWidth(tblSPK);
//        txtFilter.setText("");
    }

    private void tableFilter(String txt) {
        TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(((DefaultTableModel) tblBayar.getModel()));
        sorter.setRowFilter(RowFilter.regexFilter(txt));

        tblBayar.setRowSorter(sorter);
    }

    public void tanggal() {
        Date tgl = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
//        txtFilter.setText(sdf.format(tgl));

    }

}

class MyTableModel extends DefaultTableModel {

    public boolean isCellEditable(int row, int column) {
        return false;
    }
}
